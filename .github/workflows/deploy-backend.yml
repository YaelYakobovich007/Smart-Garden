name: Deploy Backend to Cloud Run

on:
  push:
    branches: [main, master]
    paths:
      - "app backend/**"
  pull_request:
    branches: [main, master]
    paths:
      - "app backend/**"

env:
  PROJECT_ID: smart-garden-463611
  SERVICE_NAME: smart-garden-backend
  REGION: europe-west1

jobs:
  # Pull request validation
  test-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "app backend/package-lock.json"

      - name: Install dependencies
        run: |
          cd "app backend"
          npm ci

      - name: Run tests (if any)
        run: |
          cd "app backend"
          npm test || echo "No tests found, continuing..."

      - name: Check syntax
        run: |
          cd "app backend"
          node -c app.js
          echo "âœ… Syntax check passed"

      - name: Security audit
        run: |
          cd "app backend"
          npm audit --audit-level moderate || echo "Security audit completed"

      - name: Build Docker image (test only)
        run: |
          cd "app backend"
          docker build -t test-image .

  # Production deployment
  deploy-backend:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "app backend/package-lock.json"

      - name: Install dependencies
        run: |
          cd "app backend"
          npm ci

      - name: Check syntax
        run: |
          cd "app backend"
          node -c app.js
          echo "âœ… Syntax check passed"

      - name: Security audit
        run: |
          cd "app backend"
          npm audit --audit-level moderate || echo "Security audit completed"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker europe-west1-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          cd "app backend"
          docker build -t europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --service-account smart-garden-run-sa@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
              --add-cloudsql-instances=smart-garden-463611:me-west1:smartgarden-db \
            --set-env-vars="GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }},GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }},DB_HOST=${{ secrets.DB_HOST }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_NAME=${{ secrets.DB_NAME }},DB_PORT=${{ secrets.DB_PORT }},GOOGLE_CLOUD_PROJECT_ID=${{ env.PROJECT_ID }},GOOGLE_CLOUD_BUCKET_NAME=smart_garden,GOOGLE_CLOUD_KEY_FILE=${{ secrets.GOOGLE_CLOUD_KEY_FILE }},USE_REAL_EMAIL=${{ secrets.USE_REAL_EMAIL }},EMAIL_SERVICE=${{ secrets.EMAIL_SERVICE }},EMAIL_USER=${{ secrets.EMAIL_USER }},EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }},EMAIL_FROM=${{ secrets.EMAIL_FROM }},RESET_PASSWORD_URL=${{ secrets.RESET_PASSWORD_URL }},HF_TOKEN=${{ secrets.HF_TOKEN }},WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }},PLANT_ID_API_KEY=${{ secrets.PLANT_ID_API_KEY }}"

      - name: Show service URL
        run: |
          gcloud run services describe ${{ env.SERVICE_NAME }} \
            --region ${{ env.REGION }} \
            --format="value(status.url)"

      - name: Comment on PR (if this was triggered by a PR merge)
        if: github.event_name == 'push'
        run: |
          echo "ðŸš€ Successfully deployed to production!"
          echo "Service URL: https://smart-garden-backend-1088783109508.europe-west1.run.app"
